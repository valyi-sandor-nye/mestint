/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import business_logic.Fox;
import business_logic.Hound;
import business_logic.Model;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/** This window is for editing a table.
 * 
 * @author valyis
 */
public class FrameEditing extends javax.swing.JFrame {

    Model model;
    JButtonWithPosition[][] buttons;

    /**
     * Creates new form 
     */
    public FrameEditing(EditingMethod editingMethod, int N) {
        initComponents();
        setVisible(true);
        addingButtonMatrix(N);
        JOptionPane.showMessageDialog(this, "még csak az üresből való szerkesztési mód van implementálva. \n Csak a fehér négyzetekre pakolj!");
    }

    private void ButtonActionPerformed(ActionEvent evt /*, JButton button*/) {
        JButton button = (JButton) (evt.getSource());
        switch (button.getText()) {
            case " ":
                button.setText("f");
                break;
            case "f":
                button.setText("h");
                break;
            case "h":
                button.setText(" ");
                break;
            default:
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ButtonStartPlaying = new javax.swing.JButton();
        ButtonWithFox = new javax.swing.JRadioButton();
        ButtonWithHounds = new javax.swing.JRadioButton();
        ButtonSave = new javax.swing.JButton();
        ButtonOpen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(300, 300));
        jPanel1.setLayout(new java.awt.GridLayout(3, 3, 10, 10));

        jLabel1.setText("Pályaszerkesztés");

        ButtonStartPlaying.setText("Induljon a játék!");
        ButtonStartPlaying.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonStartPlayingActionPerformed(evt);
            }
        });

        buttonGroup1.add(ButtonWithFox);
        ButtonWithFox.setSelected(true);
        ButtonWithFox.setText("rókával");

        buttonGroup1.add(ButtonWithHounds);
        ButtonWithHounds.setText("kutyákkal");

        ButtonSave.setText("Mentés");
        ButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSaveActionPerformed(evt);
            }
        });

        ButtonOpen.setText("Megnyitás");
        ButtonOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonOpenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ButtonSave)
                            .addComponent(ButtonOpen)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(ButtonStartPlaying)
                                .addGap(40, 40, 40)
                                .addComponent(ButtonWithFox)
                                .addGap(27, 27, 27)
                                .addComponent(ButtonWithHounds)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(ButtonSave)
                        .addGap(18, 18, 18)
                        .addComponent(ButtonOpen)))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonStartPlaying)
                    .addComponent(ButtonWithFox)
                    .addComponent(ButtonWithHounds))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonStartPlayingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonStartPlayingActionPerformed
        int numberOfFs = 0;
        int numberOfHs = 0;
        int outOfPlace = 0;
        boolean ok = true;
        int N = model.getTable().getTableSize();
        for (int row = 0; row < N; row++) {
            for (int col = 0; col < N; col++) {
                switch (buttons[row][col].getText()) {
                    case " ":
                        break;
                    //  JOptionPane.showMessageDialog(null, sor+" "+oszlop);
                    case "f":
                        numberOfFs++;
                        outOfPlace += ((row+col)%2==1?1:0);
                        break;
                    case "h":
                        numberOfHs++;
                        outOfPlace += ((row+col)%2==1?1:0);
                        break;
                    default:
                        break;
                }

            }
        }
        if (outOfPlace>0) {
            JOptionPane.showMessageDialog(this, "Csak a fehér négyzetekre tegyél bábut");
            ok = false;
        }
        if (numberOfFs > 1) {
            JOptionPane.showMessageDialog(this, "Csak 1 f lehetséges, az a róka");
            ok = false;
        } else if (numberOfFs < 1) {
            JOptionPane.showMessageDialog(this, "Legyen pontosan  f, az a róka");
            ok = false;
        }
        if (numberOfHs > N/2) {
            JOptionPane.showMessageDialog(this, "Több, mint "+N/2+" h van fönn, annyi kell");
            ok = false;
        } else if (numberOfHs < N/2) {
            JOptionPane.showMessageDialog(this, "Kevesebb, mint "+N/2+"  h van fönn, annyi kell");
            ok = false;
        }
        if (ok) {
            readModelFromGUI();
            FramePlaying framePlaying;
            if (ButtonWithFox.isSelected()) {
                framePlaying = new FramePlaying(model,true);}
            else framePlaying = new FramePlaying(model,false);
       framePlaying.setVisible(true);
       this.setEnabled(false);
       this.setVisible(false);
        }

    }//GEN-LAST:event_ButtonStartPlayingActionPerformed

    private void ButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSaveActionPerformed
        readModelFromGUI();
        FrameSave frameSave = new FrameSave(this,model);
        frameSave.setEnabled(true);
        frameSave.setVisible(true);
        
    }//GEN-LAST:event_ButtonSaveActionPerformed

    private void ButtonOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonOpenActionPerformed
        FrameOpen frameOpen = new FrameOpen(this, model);
        frameOpen.setEnabled(true);
        frameOpen.setVisible(true);
        
        
        
    }//GEN-LAST:event_ButtonOpenActionPerformed

    private void readModelFromGUI() {
        int N = model.getTable().getTableSize();
        model.getTable().clear();
        for (int row = 0; row < N; row++) {
            for (int col = 0; col < N; col++) {
                switch (buttons[row][col].getText()) {
                    case " ":
                        break;
                    case "f":
                        model.getTable().addFox(new Fox(row,col));                       
                        break;
                    case "h":
                        model.getTable().addHound(new Hound(row,col));                       
                        break;
                    default:
                        break;
                }

            }
        }
    }

public void refreshGUIFromModel(){
        int N = model.getTable().getTableSize();      
        for (int row = 0; row < N; row++) {
            for (int col = 0; col < N; col++) {
                    buttons[row][col].setText(" ");
                }

            }
        if (model.getTable().getFox() != null)
        buttons[model.getTable().getFox().getRow()][model.getTable().getFox().getCol()].setText("f");
       model.getTable().getHoundList().forEach(hound
            -> {
        buttons[hound.getRow()][hound.getCol()].setText("h");
    }
    );
}
    
    
 private void addingButtonMatrix(int N) {
         model = new Model(N);
        jPanel1.setLayout(new GridLayout(N, N));
        buttons = new JButtonWithPosition[N][N];
        for (int row = 0; row < N; row++) {
            for (int col = 0; col < N; col++) {
                buttons[row][col] = new JButtonWithPosition(row, col);
                if ((row + col) % 2 == 1) {
                    buttons[row][col].setBackground(Color.yellow);
                }
                buttons[row][col].setText(" ");
                buttons[row][col].addActionListener(new java.awt.event.ActionListener() {
                    @Override
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        ButtonActionPerformed(evt /*, buttons[row][col]*/);
                    }

                });
                jPanel1.add(buttons[row][col]);
            }
        }

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonOpen;
    private javax.swing.JButton ButtonSave;
    private javax.swing.JButton ButtonStartPlaying;
    private javax.swing.JRadioButton ButtonWithFox;
    private javax.swing.JRadioButton ButtonWithHounds;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

   
}
