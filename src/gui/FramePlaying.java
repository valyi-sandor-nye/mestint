package gui;

import business_logic.Direction;
import business_logic.Hound;
import business_logic.Model;
import business_logic.Move;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author valyis
 */
public class FramePlaying extends javax.swing.JFrame {
        static int STARTINGDEPTH = 0;
        JButtonWithPosition[][] buttons;
        Model model;
        int N; 
        Move move = null;
        Boolean humanWithFox;
    /**
     * Creates new form FamePlaying
     * @param inputModel
     * @param inputHumanWithFox
     */
    public FramePlaying(Model inputModel, Boolean inputHumanWithFox) {
        model = inputModel;
        humanWithFox = inputHumanWithFox;
        N = model.getTable().getTableSize();
        initComponents();
        putUpTheButtonMatrix();
    }

    private void ButtonActionPerformed(ActionEvent evt) {
        JButtonWithPosition button = (JButtonWithPosition) (evt.getSource());
        int row = button.getRow();
        int col = button.getCol();
         if (move == null && humanWithFox) {
            if (button.getText().equals(" ")) {
                int foxRow = model.getTable().getFox().getRow();
                int foxCol = model.getTable().getFox().getCol();
                for (Direction dir : Direction.values()) {
                    if (dir.getRowStep() == (row - foxRow) && dir.getColStep() == (col - foxCol)) {
                        move = new Move(model.getTable().getFox(), dir);
                        model.getTable().doMove(move);
                        if (model.getTable().winFox()) {
                            JOptionPane.showMessageDialog(this,"Győzott a róka!");
                            return;
                        }
                        loadButtonTextsFromModel();
                        setVisible(true);
                        move = null;
                        try {
                            Thread.sleep(300);
                        } catch (InterruptedException ex) {
                            Logger.getLogger("FoxAndHounds").log(Level.SEVERE, "Megszakított izé", ex);
                        }
                        model.getTable().doAIMove(STARTINGDEPTH);
                        loadButtonTextsFromModel();
                        setVisible(true);
                    }
                }
            }
        }
        if (model.getTable().winHounds()) {
            JOptionPane.showMessageDialog(this,"Győzott a kutyacsapat!");
        }

        
    }

    private void loadButtonTextsFromModel() {
        for (int row=0;row<N;row++) for (int col=0;col<N;col++) {
            buttons[row][col].setText(" ");
        }
        int foxX = model.getTable().getFox().getCol();
        int foxY = model.getTable().getFox().getRow();
        buttons[foxY][foxX].setText("f");
        for (Hound h: model.getTable().getHoundList()) {
            buttons[h.getRow()][h.getCol()].setText("h");
        }
        
    }

    private void putUpTheButtonMatrix() {
        jPanel1.setLayout(new GridLayout(N, N));
        buttons = new JButtonWithPosition[N][N];
        
        for (int row = 0; row < N; row++) {
            for (int col = 0; col < N; col++) {
                buttons[row][col] = new JButtonWithPosition(row, col);
                if ((row + col) % 2 == 1) {
                    buttons[row][col].setBackground(Color.yellow);
                }
                buttons[row][col].setText(" ");
                buttons[row][col].addActionListener(new java.awt.event.ActionListener() {
                    @Override
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        ButtonActionPerformed(evt /*, buttons[row][col]*/);
                    }

                });
                jPanel1.add(buttons[row][col]);
            }
        }
        loadButtonTextsFromModel();
        setVisible(true);    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 251, Short.MAX_VALUE)
        );

        jLabel1.setText("Játékmenet");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(jLabel1)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
